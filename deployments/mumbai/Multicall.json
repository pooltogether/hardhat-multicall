{
  "address": "0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentBlockCoinbase",
      "outputs": [
        {
          "internalType": "address",
          "name": "coinbase",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentBlockDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentBlockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gaslimit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLastBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5d730f5e0f758f840913e998e78a22a79b6d97b2da6e041359444f91952a4fab",
  "receipt": {
    "to": null,
    "from": "0xE0F4217390221aF47855E094F6e112D43C8698fE",
    "contractAddress": "0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc",
    "transactionIndex": 0,
    "gasUsed": "417762",
    "logsBloom": "0x
    "blockHash": "0xa3ea3cdfa72d6712b60e5777feeacbc9f317ee206c7380fd3cc02db33e993b41",
    "transactionHash": "0x5d730f5e0f758f840913e998e78a22a79b6d97b2da6e041359444f91952a4fab",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 12011090,
        "transactionHash": "0x5d730f5e0f758f840913e998e78a22a79b6d97b2da6e041359444f91952a4fab",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e0f4217390221af47855e094f6e112d43c8698fe",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000008e7b6c5a9f8000000000000000000000000000000000000000000000000000d35603d25ab900000000000000000000000000000000000000000000000004914bf354db50aced30000000000000000000000000000000000000000000000000d2c78866001980000000000000000000000000000000000000000000000004914c81d047ab4c6d3",
        "logIndex": 0,
        "blockHash": "0xa3ea3cdfa72d6712b60e5777feeacbc9f317ee206c7380fd3cc02db33e993b41"
      }
    ],
    "blockNumber": 12011090,
    "cumulativeGasUsed": "417762",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "09d14077e319f2bf69d847e36753f720",
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>\",\"methods\":{},\"title\":\"Multicall - Aggregate results from multiple read-only function calls\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multicall.sol\":{\"content\":\"  \\npragma solidity >=0.5.0;\\npragma experimental ABIEncoderV2;\\n\\n/// @title Multicall - Aggregate results from multiple read-only function calls\\n/// @author Michael Elliot <mike@makerdao.com>\\n/// @author Joshua Levine <joshua@makerdao.com>\\n/// @author Nick Johnson <arachnid@notdot.net>\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        bytes callData;\\n    }\\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new bytes[](calls.length);\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\\n            require(success);\\n            returnData[i] = ret;\\n        }\\n    }\\n    // Helper functions\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n    function getBlockHash(uint256 blockNumber) public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(blockNumber);\\n    }\\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(block.number - 1);\\n    }\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {\\n        difficulty = block.difficulty;\\n    }\\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\\n        gaslimit = block.gaslimit;\\n    }\\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\\n        coinbase = block.coinbase;\\n    }\\n}\",\"keccak256\":\"0xbccd606cb59fcfb5deb73a110b86318eb4a9c380920114734bde9f150b04df4f\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610699806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a29190610520565b60405180910390f35b6100be6100b93660046103b3565b610123565b6040516100a292919061052e565b610095610231565b6100956100e236600461038d565b61023a565b610095610247565b61009561024b565b6100ff61024f565b6040516100a29190610512565b61009561011a3660046103e8565b610253565b4290565b60006060439150825160405190808252806020026020018201604052801561015f57816020015b606081526020019060019003908161014a5790505b50905060005b835181101561022b576000606085838151811061017e57fe5b6020026020010151600001516001600160a01b031686848151811061019f57fe5b6020026020010151602001516040516101b89190610506565b6000604051808303816000865af19150503d80600081146101f5576040519150601f19603f3d011682016040523d82523d6000602084013e6101fa565b606091505b50915091508161020957600080fd5b8084848151811061021657fe5b60209081029190910101525050600101610165565b50915091565b60001943014090565b6001600160a01b03163190565b4490565b4590565b4190565b4090565b803561026281610636565b92915050565b600082601f83011261027957600080fd5b813561028c61028782610575565b61054e565b81815260209384019390925082018360005b838110156102ca57813586016102b48882610323565b845250602092830192919091019060010161029e565b5050505092915050565b600082601f8301126102e557600080fd5b81356102f361028782610596565b9150808252602083016020830185838301111561030f57600080fd5b61031a8382846105f0565b50505092915050565b60006040828403121561033557600080fd5b61033f604061054e565b9050600061034d8484610257565b825250602082013567ffffffffffffffff81111561036a57600080fd5b610376848285016102d4565b60208301525092915050565b80356102628161064d565b60006020828403121561039f57600080fd5b60006103ab8484610257565b949350505050565b6000602082840312156103c557600080fd5b813567ffffffffffffffff8111156103dc57600080fd5b6103ab84828501610268565b6000602082840312156103fa57600080fd5b60006103ab8484610382565b6000610412838361049f565b9392505050565b610422816105d6565b82525050565b6000610433826105c4565b61043d81856105c8565b93508360208202850161044f856105be565b8060005b85811015610489578484038952815161046c8582610406565b9450610477836105be565b60209a909a0199925050600101610453565b5091979650505050505050565b610422816105e1565b60006104aa826105c4565b6104b481856105c8565b93506104c48185602086016105fc565b6104cd8161062c565b9093019392505050565b60006104e2826105c4565b6104ec81856105d1565b93506104fc8185602086016105fc565b9290920192915050565b600061041282846104d7565b602081016102628284610419565b602081016102628284610496565b6040810161053c8285610496565b81810360208301526103ab8184610428565b60405181810167ffffffffffffffff8111828210171561056d57600080fd5b604052919050565b600067ffffffffffffffff82111561058c57600080fd5b5060209081020190565b600067ffffffffffffffff8211156105ad57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610262826105e4565b90565b6001600160a01b031690565b82818337506000910152565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b50505050565b601f01601f191690565b61063f816105d6565b811461064a57600080fd5b50565b61063f816105e156fea365627a7a7231582033e63215f9944c1c8012e3232ed6aad94346dbf90713ad09a9479f2c52b6f0356c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a29190610520565b60405180910390f35b6100be6100b93660046103b3565b610123565b6040516100a292919061052e565b610095610231565b6100956100e236600461038d565b61023a565b610095610247565b61009561024b565b6100ff61024f565b6040516100a29190610512565b61009561011a3660046103e8565b610253565b4290565b60006060439150825160405190808252806020026020018201604052801561015f57816020015b606081526020019060019003908161014a5790505b50905060005b835181101561022b576000606085838151811061017e57fe5b6020026020010151600001516001600160a01b031686848151811061019f57fe5b6020026020010151602001516040516101b89190610506565b6000604051808303816000865af19150503d80600081146101f5576040519150601f19603f3d011682016040523d82523d6000602084013e6101fa565b606091505b50915091508161020957600080fd5b8084848151811061021657fe5b60209081029190910101525050600101610165565b50915091565b60001943014090565b6001600160a01b03163190565b4490565b4590565b4190565b4090565b803561026281610636565b92915050565b600082601f83011261027957600080fd5b813561028c61028782610575565b61054e565b81815260209384019390925082018360005b838110156102ca57813586016102b48882610323565b845250602092830192919091019060010161029e565b5050505092915050565b600082601f8301126102e557600080fd5b81356102f361028782610596565b9150808252602083016020830185838301111561030f57600080fd5b61031a8382846105f0565b50505092915050565b60006040828403121561033557600080fd5b61033f604061054e565b9050600061034d8484610257565b825250602082013567ffffffffffffffff81111561036a57600080fd5b610376848285016102d4565b60208301525092915050565b80356102628161064d565b60006020828403121561039f57600080fd5b60006103ab8484610257565b949350505050565b6000602082840312156103c557600080fd5b813567ffffffffffffffff8111156103dc57600080fd5b6103ab84828501610268565b6000602082840312156103fa57600080fd5b60006103ab8484610382565b6000610412838361049f565b9392505050565b610422816105d6565b82525050565b6000610433826105c4565b61043d81856105c8565b93508360208202850161044f856105be565b8060005b85811015610489578484038952815161046c8582610406565b9450610477836105be565b60209a909a0199925050600101610453565b5091979650505050505050565b610422816105e1565b60006104aa826105c4565b6104b481856105c8565b93506104c48185602086016105fc565b6104cd8161062c565b9093019392505050565b60006104e2826105c4565b6104ec81856105d1565b93506104fc8185602086016105fc565b9290920192915050565b600061041282846104d7565b602081016102628284610419565b602081016102628284610496565b6040810161053c8285610496565b81810360208301526103ab8184610428565b60405181810167ffffffffffffffff8111828210171561056d57600080fd5b604052919050565b600067ffffffffffffffff82111561058c57600080fd5b5060209081020190565b600067ffffffffffffffff8211156105ad57600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b919050565b6000610262826105e4565b90565b6001600160a01b031690565b82818337506000910152565b60005b838110156106175781810151838201526020016105ff565b83811115610626576000848401525b50505050565b601f01601f191690565b61063f816105d6565b811461064a57600080fd5b50565b61063f816105e156fea365627a7a7231582033e63215f9944c1c8012e3232ed6aad94346dbf90713ad09a9479f2c52b6f0356c6578706572696d656e74616cf564736f6c63430005110040",
  "devdoc": {
    "author": "Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>",
    "methods": {},
    "title": "Multicall - Aggregate results from multiple read-only function calls"
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}